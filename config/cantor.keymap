/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        shift_delete {
            bindings = <&kp LS(DELETE)>;
            key-positions = <11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W      &kp E    &kp R  &kp T     &kp Y  &kp U  &kp I      &kp O    &kp P     &kp K_BACK
&kp LCTRL   &kp A  &kp S      &kp D    &kp F  &kp G     &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LGUI    &kp Z  &kp X      &kp C    &kp V  &kp B     &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
&kp LSHIFT  &mo 1  &kp SPACE  &kp RET  &mo 2  &kp LALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6    &kp N7    &kp N8  &kp N9     &kp N0   &trans
&trans  &kp F1  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp F11  &trans
&trans  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7    &kp F8    &kp F9  &kp F10    &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL      &kp AT     &kp HASH              &kp DLLR          &kp PRCNT       &kp CARET        &kp AMPS           &kp ASTRK              &kp GRAVE  &kp UNDERSCORE  &kp BSPC
&trans  &kp QUESTION  &kp MINUS  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp RBKT   &kp BSLH        &trans
&trans  &kp KP_EQUAL  &kp PLUS   &trans                &trans            &trans          &trans           &trans             &trans                 &kp TILDE  &kp PIPE        &trans
&trans  &trans        &trans     &trans                &trans            &trans
            >;
        };

        combined_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp C_VOLUME_UP    &kp C_BRIGHTNESS_INC  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &kp K_MUTE         &trans                &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bothPressed {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
